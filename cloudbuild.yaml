# [START cloudbuild]
steps:
# This step runs the unit tests on the app
- name: 'python:3.7-slim'
  id: Test
  entrypoint: /bin/sh
  args:
  - -c
  - 'pip install -r requirements.txt && python -m unittest discover'

# This step builds the container image.
- name: 'gcr.io/cloud-builders/docker'
  id: Build
  args:
  - 'build'
  - '-t'
  - 'gcr.io/$PROJECT_ID/simple-app:$SHORT_SHA'
  - '.'

# This step pushes the image to Container Registry
# The PROJECT_ID and SHORT_SHA variables are automatically
# replaced by Cloud Build.
- name: 'gcr.io/cloud-builders/docker'
  id: Push
  args:
  - 'push'
  - 'gcr.io/$PROJECT_ID/simple-app:$SHORT_SHA'
  - 'gcr.io/$PROJECT_ID/simple-app:latest'
# [END cloudbuild]

# [START cloudbuild-trigger-cd]
# This step clones the cloud-infrastructure env repository
#- name: 'gcr.io/cloud-builders/gcloud'
#  id: Clone env repository
#  entrypoint: /bin/sh
#  args:
#  - '-c'
#  - |
#    gcloud source repos clone git@github.com:DarioBernardo/cloud-infrastructure.git && \
#    cd cloud-infrastructure && \
#    git checkout candidate && \
#    git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)')
## This step generates the new manifest
#- name: 'gcr.io/cloud-builders/gcloud'
#  id: Generate manifest
#  entrypoint: /bin/sh
#  args:
#  - '-c'
#  - |
#     sed "s/GOOGLE_CLOUD_PROJECT/${PROJECT_ID}/g" kubernetes.yaml.tpl | \
#     sed "s/COMMIT_SHA/${SHORT_SHA}/g" > cloud-infrastructure/kubernetes.yaml
## This step pushes the manifest back to cloud-infrastructure repo
#- name: 'gcr.io/cloud-builders/gcloud'
#  id: Push manifest
#  entrypoint: /bin/sh
#  args:
#  - '-c'
#  - |
#    set -x && \
#    cd cloud-infrastructure && \
#    git add kubernetes.yaml && \
#    git commit -m "Deploying image gcr.io/${PROJECT_ID}/simple-app:${SHORT_SHA}
#    Built from commit ${COMMIT_SHA} of repository simple-app
#    Author: $(git log --format='%an <%ae>' -n 1 HEAD)" && \
#    git push origin candidate
## [END cloudbuild-trigger-cd]